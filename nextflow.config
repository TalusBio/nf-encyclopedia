// Pipeline Parameters
params {
    // Input options
    input = null
    fasta = null
    dlib = null
    contrasts = null

    // Output directories
    result_dir = 'results'
    report_dir = 'reports'
    mzml_dir = 'mzml'

    // Email to alert on completion.
    email = null

    // Aggregate groups into single analysis.
    aggregate = false
    agg_name = 'aggregated'

    // Parameters for MSConvert
    msconvert.demultiplex = true
    msconvert.force = false

    // Parameters for EncyclopeDIA
    encyclopedia.args = '-percolatorVersion v3-01 -quantifyAcrossSamples true -scoringBreadthType window'
    encyclopedia.chrlib_suffix = 'chrlib'
    encyclopedia.quant_suffix = 'quant'
    encyclopedia.local.args = '-frag CID'
    encyclopedia.global.args = ''
    encyclopedia.jar = '/code/encyclopedia.jar'

    // Parameters for MSstats
    msstats.enabled = true
    msstats.normalization = 'equalizeMedians'
    msstats.reports = false

    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '128.GB'
    max_cpus                   = 16
    max_time                   = '240.h'
}


// Containers
process {
    container = "ghcr.io/talusbio/nf-encyclopedia:latest"
    withName: 'MSCONVERT' {
        container = 'chambm/pwiz-skyline-i-agree-to-the-vendor-licenses:latest'
    }
}


// Manifest
manifest {
    name            = 'nf-encyclopedia'
    author          = 'William E Fondrie'
    homePage        = 'https://github.com/nf-encyclopedia'
    description     = 'Analyze GPF DIA proteomics data with EncyclopeDIA'
    mainScript      = 'main.nf'
    nextflowVersion = '!>=21.10.3'
}


// Export these variables to prevent local Python/R libraries from conflicting
// with those in the container The JULIA depot path has been adjusted to a
// fixed path `/usr/local/share/julia` that needs to be used for packages in
// the container. See https://apeltzer.github.io/post/03-julia-lang-nextflow/
// for details on that. Once we have a common agreement on where to keep Julia
// packages, this is adjustable.
// Copied from the nf-core template.
env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']
def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.report_dir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.report_dir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.report_dir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.report_dir}/pipeline_dag_${trace_timestamp}.html"
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit. Copied from the nf-core template.
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
